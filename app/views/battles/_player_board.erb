<script type="text/javascript">
  $(function () {
    <% if @player_board.nil? %>
    var placementBoard =
        '<div id="shipSelection">' +
        '<div id="shipYard">' +
        '<div class="ship" id="aircraft"></div>' +
        '<div class="spacer"> </div>' +
        '<div class="ship" id="destroyer1"></div>' +
        '<div class="spacer"> </div>' +
        '<div class="ship" id="cruiser1"></div>' +
        '<div class="spacer"> </div>' +
        '<div class="ship" id="cruiser2"></div>' +
        '<div class="spacer"> </div>' +
        '<div class="ship" id="destroyer2"></div>' +
        '</div>' +
        '<form>' +
        '<a href="#" class="btn btn-primary btn-lg btn-block alt">Ready</a>' +
        '</form>' +
        '</div>';

    $('#enemy-board').hide();
    $('#battle-field').append(placementBoard);
    $('#player-board').addClass('placementBoard');
    $('#messages').text("Place your ships");


    $('.ship').draggable({

      containment: '.placementBoard',
      snap: ".seaBox",
      grid: [40, 40],
      //revert: "invalid"
      revert: function () {
        //console.log("parent id " + this.parent().attr('id'));
        //console.log("this id " + this.attr('id'));
        //console.log("position " + getShipPosition(this));
        //console.log(this.parent().hasClass('seaBox') );
        //console.log("check coll " + checkCollision(this.attr('id'), getShipPosition(this)));
        if (this.parent().hasClass('seaBox') && !checkCollision(this.attr('id'), getShipPosition(this))) {
          return false;
        }
        return "invalid";
      }
    });


    $('.seaBox').droppable({
      tolerance: "intersect",
      accept: ".ship",
      drop: function (event, ui) {
        // TODO append only if there's no collision
        appendShip(ui.draggable, $(this).attr("id"));
      }
    });

    $(".ship").dblclick(function () {

      var ship_id = $(this).attr("id");
      var height = $(this).css("height");
      var width = $(this).css("width");

      ship_id = ship_id.charAt(ship_id.length - 1) == 'V' ? ship_id.slice(0, -1) : ship_id + "V";

      $(this).css("height", width);
      $(this).css("width", height);
      $(this).attr("id", ship_id);

    });

    function appendShip(ship, pos) {
      var shipId = ship.attr("id");
      console.log(shipId + " " + pos);
      if (shipId.indexOf("aircraft") > -1) {
        ship.detach().appendTo($("#" + (pos - (2 * getStep(shipId)))));
      }
      else if (shipId.indexOf("cruiser") > -1) {
        ship.detach().appendTo($("#" + (pos - (1 * getStep(shipId)))));
      } else {
        ship.detach().appendTo($("#" + pos));
      }
    }

    /**
     * Check if there's collision
     * @param shipId id of dragged ship
     * @param shipPos position of the ship
     * return true if collision found
     */
    function checkCollision(shipId, shipPos) {
      var collision = false;
      $(".ship").each(function () {
        var ship = $(this);
        var otherId = ship.attr("id");
        var otherPos = getShipPosition(ship);
        if (shipId != otherId) {
          if (comparePosition(shipPos, otherPos, getShipSize(shipId), getShipSize(otherId), getStep(shipId), getStep(otherId))) {
            collision = true;
            return false;
          }
        }
      });
      return collision;
    }

    /**
     *
     * @param posDragged position of the dragged ship
     * @param pos2 position of the other ship
     * @param size1 size of the ship at pos1
     * @param size2 size of the ship at pos2
     * @param step1 if is horizontal the step 1
     * @param step2 if is vertical the step is 10
     */
    function comparePosition(posDragged, pos2, size1, size2, step1, step2) {

      if (pos2 != "shipYard") {
        var tailShip1 = getShipTail(posDragged, size1, step1);
        var tailShip2 = getShipTail(pos2, size2, step2);
        console.log("ship1 " + posDragged + " " + tailShip1);
        console.log("ship1=2 " + pos2 + " " + tailShip2);
        for (var i = parseInt(posDragged); i <= tailShip1; i += step1) {
          for (var k = parseInt(pos2); k <= tailShip2; k += step2) {
            console.log(i + " <> " + k);
            if (k == i) {
              console.log("colision at " + k);
              return true;
            }
          }
        }
      }
      return false;
    }

    function getStep(shipId) {
      return shipId.indexOf('V') > -1 ? 10 : 1;
    }

    function getShipTail(pos, size, step) {
      //console.log("getTail " + pos + " " + size + " " + step);
      return (parseInt(pos) + ((parseInt(size) - 1) * step));
    }

    /**
     *
     * @param ship object
     * @returns {string}
     */
    function getShipPosition(ship) {
      return ship.parent().attr('id');
    }

    /**
     *
     * @param shipId  id of the ship
     * @returns {number}
     */
    function getShipSize(shipId) {
      var size = 0;
      if (shipId.indexOf("aircraft") > -1) {
        size = 5;
      } else if (shipId.indexOf("cruiser") > -1) {
        size = 3;
      } else {
        size = 2;
      }
      return size;
    }

    <% else %>
    // here will render the board
    <% end %>
  })
</script>